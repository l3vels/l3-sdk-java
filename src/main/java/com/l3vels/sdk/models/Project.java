/*
 * L3vels Api
 * L3vels API for Game developers
 *
 * The version of the OpenAPI document: 0.3
 * Contact: support@l3vels.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.l3vels.sdk.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Project
 */
@JsonPropertyOrder({
  Project.JSON_PROPERTY_ID,
  Project.JSON_PROPERTY_NAME,
  Project.JSON_PROPERTY_DESCRIPTION,
  Project.JSON_PROPERTY_CATEGORY,
  Project.JSON_PROPERTY_LOGO_IMAGE,
  Project.JSON_PROPERTY_MEDIAS,
  Project.JSON_PROPERTY_SOCIAL_LINKS,
  Project.JSON_PROPERTY_MAIN_MEDIA,
  Project.JSON_PROPERTY_URL,
  Project.JSON_PROPERTY_WEB_LINK,
  Project.JSON_PROPERTY_DISCORD,
  Project.JSON_PROPERTY_TWITTER,
  Project.JSON_PROPERTY_INSTAGRAM,
  Project.JSON_PROPERTY_CONTACT_PHONE,
  Project.JSON_PROPERTY_CONTACT_EMAIL,
  Project.JSON_PROPERTY_STATUS,
  Project.JSON_PROPERTY_ACCOUNT_ID,
  Project.JSON_PROPERTY_CREATED_ON,
  Project.JSON_PROPERTY_MODIFIED_ON,
  Project.JSON_PROPERTY_CREATED_BY,
  Project.JSON_PROPERTY_MODIFIED_BY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-21T12:10:08.229616-05:00[America/Bogota]")
public class Project {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_CATEGORY = "category";
  private String category;

  public static final String JSON_PROPERTY_LOGO_IMAGE = "logo_image";
  private String logoImage;

  public static final String JSON_PROPERTY_MEDIAS = "medias";
  private List<String> medias = new ArrayList<>();

  public static final String JSON_PROPERTY_SOCIAL_LINKS = "social_links";
  private List<String> socialLinks = new ArrayList<>();

  public static final String JSON_PROPERTY_MAIN_MEDIA = "main_media";
  private String mainMedia;

  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_WEB_LINK = "web_link";
  private String webLink;

  public static final String JSON_PROPERTY_DISCORD = "discord";
  private String discord;

  public static final String JSON_PROPERTY_TWITTER = "twitter";
  private String twitter;

  public static final String JSON_PROPERTY_INSTAGRAM = "instagram";
  private String instagram;

  public static final String JSON_PROPERTY_CONTACT_PHONE = "contact_phone";
  private String contactPhone;

  public static final String JSON_PROPERTY_CONTACT_EMAIL = "contact_email";
  private String contactEmail;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_ACCOUNT_ID = "account_id";
  private BigDecimal accountId;

  public static final String JSON_PROPERTY_CREATED_ON = "created_on";
  private OffsetDateTime createdOn;

  public static final String JSON_PROPERTY_MODIFIED_ON = "modified_on";
  private OffsetDateTime modifiedOn;

  public static final String JSON_PROPERTY_CREATED_BY = "created_by";
  private BigDecimal createdBy;

  public static final String JSON_PROPERTY_MODIFIED_BY = "modified_by";
  private BigDecimal modifiedBy;

  public Project() {
  }

  public Project id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The unique identifier for the Game entity.
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public Project name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the Game.
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public Project description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * A brief description of the Game.
   * @return description
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public Project category(String category) {
    
    this.category = category;
    return this;
  }

   /**
   * The category or genre of the Game.
   * @return category
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCategory() {
    return category;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCategory(String category) {
    this.category = category;
  }


  public Project logoImage(String logoImage) {
    
    this.logoImage = logoImage;
    return this;
  }

   /**
   * The logo or icon associated with the Game.
   * @return logoImage
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOGO_IMAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLogoImage() {
    return logoImage;
  }


  @JsonProperty(JSON_PROPERTY_LOGO_IMAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLogoImage(String logoImage) {
    this.logoImage = logoImage;
  }


  public Project medias(List<String> medias) {
    
    this.medias = medias;
    return this;
  }

  public Project addMediasItem(String mediasItem) {
    if (this.medias == null) {
      this.medias = new ArrayList<>();
    }
    this.medias.add(mediasItem);
    return this;
  }

   /**
   * Additional images associated with the collection, such as screenshots or promotional images.
   * @return medias
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MEDIAS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getMedias() {
    return medias;
  }


  @JsonProperty(JSON_PROPERTY_MEDIAS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMedias(List<String> medias) {
    this.medias = medias;
  }


  public Project socialLinks(List<String> socialLinks) {
    
    this.socialLinks = socialLinks;
    return this;
  }

  public Project addSocialLinksItem(String socialLinksItem) {
    if (this.socialLinks == null) {
      this.socialLinks = new ArrayList<>();
    }
    this.socialLinks.add(socialLinksItem);
    return this;
  }

   /**
   * Additional social links associated with the collection
   * @return socialLinks
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SOCIAL_LINKS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getSocialLinks() {
    return socialLinks;
  }


  @JsonProperty(JSON_PROPERTY_SOCIAL_LINKS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSocialLinks(List<String> socialLinks) {
    this.socialLinks = socialLinks;
  }


  public Project mainMedia(String mainMedia) {
    
    this.mainMedia = mainMedia;
    return this;
  }

   /**
   * The main or featured image associated with the Game. You can set it from the Dashboard as main image.
   * @return mainMedia
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MAIN_MEDIA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMainMedia() {
    return mainMedia;
  }


  @JsonProperty(JSON_PROPERTY_MAIN_MEDIA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMainMedia(String mainMedia) {
    this.mainMedia = mainMedia;
  }


  public Project url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * A unique URL for the game on the L3vels platform.
   * @return url
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUrl(String url) {
    this.url = url;
  }


  public Project webLink(String webLink) {
    
    this.webLink = webLink;
    return this;
  }

   /**
   * The URL for the Game&#39;s website or landing page.
   * @return webLink
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WEB_LINK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getWebLink() {
    return webLink;
  }


  @JsonProperty(JSON_PROPERTY_WEB_LINK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWebLink(String webLink) {
    this.webLink = webLink;
  }


  public Project discord(String discord) {
    
    this.discord = discord;
    return this;
  }

   /**
   * The link to the Game&#39;s Discord server.
   * @return discord
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DISCORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDiscord() {
    return discord;
  }


  @JsonProperty(JSON_PROPERTY_DISCORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDiscord(String discord) {
    this.discord = discord;
  }


  public Project twitter(String twitter) {
    
    this.twitter = twitter;
    return this;
  }

   /**
   * The link to the Game&#39;s official Twitter account.
   * @return twitter
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TWITTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTwitter() {
    return twitter;
  }


  @JsonProperty(JSON_PROPERTY_TWITTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTwitter(String twitter) {
    this.twitter = twitter;
  }


  public Project instagram(String instagram) {
    
    this.instagram = instagram;
    return this;
  }

   /**
   * The link to the Game&#39;s official Instagram account.
   * @return instagram
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INSTAGRAM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getInstagram() {
    return instagram;
  }


  @JsonProperty(JSON_PROPERTY_INSTAGRAM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInstagram(String instagram) {
    this.instagram = instagram;
  }


  public Project contactPhone(String contactPhone) {
    
    this.contactPhone = contactPhone;
    return this;
  }

   /**
   *  A phone number for contacting the Game&#39;s developers or support team.
   * @return contactPhone
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONTACT_PHONE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getContactPhone() {
    return contactPhone;
  }


  @JsonProperty(JSON_PROPERTY_CONTACT_PHONE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContactPhone(String contactPhone) {
    this.contactPhone = contactPhone;
  }


  public Project contactEmail(String contactEmail) {
    
    this.contactEmail = contactEmail;
    return this;
  }

   /**
   * An email address for contacting the Game&#39;s developers or support team.
   * @return contactEmail
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONTACT_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getContactEmail() {
    return contactEmail;
  }


  @JsonProperty(JSON_PROPERTY_CONTACT_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContactEmail(String contactEmail) {
    this.contactEmail = contactEmail;
  }


  public Project status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * The current status of the Game, such as \&quot;Draft\&quot;, \&quot;Active\&quot;, or \&quot;Inactive\&quot;.
   * @return status
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(String status) {
    this.status = status;
  }


  public Project accountId(BigDecimal accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   *  The unique identifier of the account that the Game belongs to. This allows developers to manage multiple Games across multiple accounts.
   * @return accountId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getAccountId() {
    return accountId;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccountId(BigDecimal accountId) {
    this.accountId = accountId;
  }


  public Project createdOn(OffsetDateTime createdOn) {
    
    this.createdOn = createdOn;
    return this;
  }

   /**
   * The date and time that the Game entity was created.
   * @return createdOn
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_ON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_ON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
  }


  public Project modifiedOn(OffsetDateTime modifiedOn) {
    
    this.modifiedOn = modifiedOn;
    return this;
  }

   /**
   * The date and time that the Game entity was last modified.
   * @return modifiedOn
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MODIFIED_ON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getModifiedOn() {
    return modifiedOn;
  }


  @JsonProperty(JSON_PROPERTY_MODIFIED_ON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setModifiedOn(OffsetDateTime modifiedOn) {
    this.modifiedOn = modifiedOn;
  }


  public Project createdBy(BigDecimal createdBy) {
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * The user or system that created the Game entity.
   * @return createdBy
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getCreatedBy() {
    return createdBy;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedBy(BigDecimal createdBy) {
    this.createdBy = createdBy;
  }


  public Project modifiedBy(BigDecimal modifiedBy) {
    
    this.modifiedBy = modifiedBy;
    return this;
  }

   /**
   * The user or system that last modified the Game entity.
   * @return modifiedBy
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MODIFIED_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getModifiedBy() {
    return modifiedBy;
  }


  @JsonProperty(JSON_PROPERTY_MODIFIED_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setModifiedBy(BigDecimal modifiedBy) {
    this.modifiedBy = modifiedBy;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Project project = (Project) o;
    return Objects.equals(this.id, project.id) &&
        Objects.equals(this.name, project.name) &&
        Objects.equals(this.description, project.description) &&
        Objects.equals(this.category, project.category) &&
        Objects.equals(this.logoImage, project.logoImage) &&
        Objects.equals(this.medias, project.medias) &&
        Objects.equals(this.socialLinks, project.socialLinks) &&
        Objects.equals(this.mainMedia, project.mainMedia) &&
        Objects.equals(this.url, project.url) &&
        Objects.equals(this.webLink, project.webLink) &&
        Objects.equals(this.discord, project.discord) &&
        Objects.equals(this.twitter, project.twitter) &&
        Objects.equals(this.instagram, project.instagram) &&
        Objects.equals(this.contactPhone, project.contactPhone) &&
        Objects.equals(this.contactEmail, project.contactEmail) &&
        Objects.equals(this.status, project.status) &&
        Objects.equals(this.accountId, project.accountId) &&
        Objects.equals(this.createdOn, project.createdOn) &&
        Objects.equals(this.modifiedOn, project.modifiedOn) &&
        Objects.equals(this.createdBy, project.createdBy) &&
        Objects.equals(this.modifiedBy, project.modifiedBy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, category, logoImage, medias, socialLinks, mainMedia, url, webLink, discord, twitter, instagram, contactPhone, contactEmail, status, accountId, createdOn, modifiedOn, createdBy, modifiedBy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Project {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    logoImage: ").append(toIndentedString(logoImage)).append("\n");
    sb.append("    medias: ").append(toIndentedString(medias)).append("\n");
    sb.append("    socialLinks: ").append(toIndentedString(socialLinks)).append("\n");
    sb.append("    mainMedia: ").append(toIndentedString(mainMedia)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    webLink: ").append(toIndentedString(webLink)).append("\n");
    sb.append("    discord: ").append(toIndentedString(discord)).append("\n");
    sb.append("    twitter: ").append(toIndentedString(twitter)).append("\n");
    sb.append("    instagram: ").append(toIndentedString(instagram)).append("\n");
    sb.append("    contactPhone: ").append(toIndentedString(contactPhone)).append("\n");
    sb.append("    contactEmail: ").append(toIndentedString(contactEmail)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    modifiedOn: ").append(toIndentedString(modifiedOn)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    modifiedBy: ").append(toIndentedString(modifiedBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

