/*
 * L3vels Api
 * L3vels API for Game developers
 *
 * The version of the OpenAPI document: 0.3
 * Contact: support@l3vels.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.l3vels.sdk.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreatePlayerDto
 */
@JsonPropertyOrder({
  CreatePlayerDto.JSON_PROPERTY_UNIQUE_ID,
  CreatePlayerDto.JSON_PROPERTY_NAME,
  CreatePlayerDto.JSON_PROPERTY_USERNAME,
  CreatePlayerDto.JSON_PROPERTY_EMAIL,
  CreatePlayerDto.JSON_PROPERTY_AVATAR,
  CreatePlayerDto.JSON_PROPERTY_PROJECT_ID,
  CreatePlayerDto.JSON_PROPERTY_IS_CREATE_WALLET,
  CreatePlayerDto.JSON_PROPERTY_CUSTOM_PROPS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-21T12:10:08.229616-05:00[America/Bogota]")
public class CreatePlayerDto {
  public static final String JSON_PROPERTY_UNIQUE_ID = "unique_id";
  private String uniqueId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_USERNAME = "username";
  private String username;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public static final String JSON_PROPERTY_AVATAR = "avatar";
  private String avatar;

  public static final String JSON_PROPERTY_PROJECT_ID = "project_id";
  private String projectId;

  public static final String JSON_PROPERTY_IS_CREATE_WALLET = "is_create_wallet";
  private Boolean isCreateWallet;

  public static final String JSON_PROPERTY_CUSTOM_PROPS = "custom_props";
  private List<String> customProps;

  public CreatePlayerDto() {
  }

  public CreatePlayerDto uniqueId(String uniqueId) {
    
    this.uniqueId = uniqueId;
    return this;
  }

   /**
   * You can send your generated unique ID for player if it&#39;s handy for game. If field is empty, we will generate unique ID.
   * @return uniqueId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNIQUE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUniqueId() {
    return uniqueId;
  }


  @JsonProperty(JSON_PROPERTY_UNIQUE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUniqueId(String uniqueId) {
    this.uniqueId = uniqueId;
  }


  public CreatePlayerDto name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the player.
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public CreatePlayerDto username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * The username of the player.
   * @return username
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUsername() {
    return username;
  }


  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUsername(String username) {
    this.username = username;
  }


  public CreatePlayerDto email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * The email of the player.
   * @return email
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(String email) {
    this.email = email;
  }


  public CreatePlayerDto avatar(String avatar) {
    
    this.avatar = avatar;
    return this;
  }

   /**
   * The image URL of the player avatar.
   * @return avatar
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVATAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAvatar() {
    return avatar;
  }


  @JsonProperty(JSON_PROPERTY_AVATAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvatar(String avatar) {
    this.avatar = avatar;
  }


  public CreatePlayerDto projectId(String projectId) {
    
    this.projectId = projectId;
    return this;
  }

   /**
   * Game/project ID to create the player for. Example: Create player Jack for game Fortnite.
   * @return projectId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProjectId() {
    return projectId;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }


  public CreatePlayerDto isCreateWallet(Boolean isCreateWallet) {
    
    this.isCreateWallet = isCreateWallet;
    return this;
  }

   /**
   * Should create wallet for player or not.
   * @return isCreateWallet
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_CREATE_WALLET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsCreateWallet() {
    return isCreateWallet;
  }


  @JsonProperty(JSON_PROPERTY_IS_CREATE_WALLET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsCreateWallet(Boolean isCreateWallet) {
    this.isCreateWallet = isCreateWallet;
  }


  public CreatePlayerDto customProps(List<String> customProps) {
    
    this.customProps = customProps;
    return this;
  }

  public CreatePlayerDto addCustomPropsItem(String customPropsItem) {
    if (this.customProps == null) {
      this.customProps = new ArrayList<>();
    }
    this.customProps.add(customPropsItem);
    return this;
  }

   /**
   * Custom props for player.
   * @return customProps
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOM_PROPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getCustomProps() {
    return customProps;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_PROPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomProps(List<String> customProps) {
    this.customProps = customProps;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePlayerDto createPlayerDto = (CreatePlayerDto) o;
    return Objects.equals(this.uniqueId, createPlayerDto.uniqueId) &&
        Objects.equals(this.name, createPlayerDto.name) &&
        Objects.equals(this.username, createPlayerDto.username) &&
        Objects.equals(this.email, createPlayerDto.email) &&
        Objects.equals(this.avatar, createPlayerDto.avatar) &&
        Objects.equals(this.projectId, createPlayerDto.projectId) &&
        Objects.equals(this.isCreateWallet, createPlayerDto.isCreateWallet) &&
        Objects.equals(this.customProps, createPlayerDto.customProps);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uniqueId, name, username, email, avatar, projectId, isCreateWallet, customProps);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePlayerDto {\n");
    sb.append("    uniqueId: ").append(toIndentedString(uniqueId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    avatar: ").append(toIndentedString(avatar)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    isCreateWallet: ").append(toIndentedString(isCreateWallet)).append("\n");
    sb.append("    customProps: ").append(toIndentedString(customProps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

