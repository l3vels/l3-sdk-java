/*
 * L3vels Api
 * L3vels API for Game developers
 *
 * The version of the OpenAPI document: 0.3
 * Contact: support@l3vels.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.l3vels.sdk.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Transaction
 */
@JsonPropertyOrder({
  Transaction.JSON_PROPERTY_ID,
  Transaction.JSON_PROPERTY_STATUS,
  Transaction.JSON_PROPERTY_FROM,
  Transaction.JSON_PROPERTY_TO,
  Transaction.JSON_PROPERTY_CONTRACT_ID,
  Transaction.JSON_PROPERTY_CONTRACT_ADDRESS,
  Transaction.JSON_PROPERTY_BLOCKCHAIN,
  Transaction.JSON_PROPERTY_CHAIN_NAME,
  Transaction.JSON_PROPERTY_CHAIN_ID,
  Transaction.JSON_PROPERTY_ENVIRONMENT,
  Transaction.JSON_PROPERTY_TRANSACTION_HASH,
  Transaction.JSON_PROPERTY_BLOCK_NUMBER,
  Transaction.JSON_PROPERTY_TYPE,
  Transaction.JSON_PROPERTY_METHOD,
  Transaction.JSON_PROPERTY_EVENTS,
  Transaction.JSON_PROPERTY_PROJECT_ID,
  Transaction.JSON_PROPERTY_COLLECTION_ID,
  Transaction.JSON_PROPERTY_ACCOUNT_ID,
  Transaction.JSON_PROPERTY_CREATED_ON,
  Transaction.JSON_PROPERTY_MODIFIED_ON,
  Transaction.JSON_PROPERTY_CREATED_BY,
  Transaction.JSON_PROPERTY_MODIFIED_BY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-21T12:10:08.229616-05:00[America/Bogota]")
public class Transaction {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_FROM = "from";
  private String from;

  public static final String JSON_PROPERTY_TO = "to";
  private String to;

  public static final String JSON_PROPERTY_CONTRACT_ID = "contract_id";
  private String contractId;

  public static final String JSON_PROPERTY_CONTRACT_ADDRESS = "contract_address";
  private String contractAddress;

  public static final String JSON_PROPERTY_BLOCKCHAIN = "blockchain";
  private String blockchain;

  public static final String JSON_PROPERTY_CHAIN_NAME = "chain_name";
  private String chainName;

  public static final String JSON_PROPERTY_CHAIN_ID = "chain_id";
  private BigDecimal chainId;

  public static final String JSON_PROPERTY_ENVIRONMENT = "environment";
  private String environment;

  public static final String JSON_PROPERTY_TRANSACTION_HASH = "transaction_hash";
  private String transactionHash;

  public static final String JSON_PROPERTY_BLOCK_NUMBER = "block_number";
  private BigDecimal blockNumber;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_METHOD = "method";
  private String method;

  public static final String JSON_PROPERTY_EVENTS = "events";
  private List<String> events = new ArrayList<>();

  public static final String JSON_PROPERTY_PROJECT_ID = "project_id";
  private String projectId;

  public static final String JSON_PROPERTY_COLLECTION_ID = "collection_id";
  private String collectionId;

  public static final String JSON_PROPERTY_ACCOUNT_ID = "account_id";
  private BigDecimal accountId;

  public static final String JSON_PROPERTY_CREATED_ON = "created_on";
  private OffsetDateTime createdOn;

  public static final String JSON_PROPERTY_MODIFIED_ON = "modified_on";
  private OffsetDateTime modifiedOn;

  public static final String JSON_PROPERTY_CREATED_BY = "created_by";
  private BigDecimal createdBy;

  public static final String JSON_PROPERTY_MODIFIED_BY = "modified_by";
  private BigDecimal modifiedBy;

  public Transaction() {
  }

  public Transaction id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The unique identifier for the transaction entity.
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public Transaction status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Transaction status in Blockchain. Can be pending, success or fail
   * @return status
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(String status) {
    this.status = status;
  }


  public Transaction from(String from) {
    
    this.from = from;
    return this;
  }

   /**
   * Address of the sender of the transaction.
   * @return from
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FROM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFrom() {
    return from;
  }


  @JsonProperty(JSON_PROPERTY_FROM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFrom(String from) {
    this.from = from;
  }


  public Transaction to(String to) {
    
    this.to = to;
    return this;
  }

   /**
   * Address of the receiver of the transaction. It can be contract address or player address if it is a transfer transaction.
   * @return to
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTo() {
    return to;
  }


  @JsonProperty(JSON_PROPERTY_TO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTo(String to) {
    this.to = to;
  }


  public Transaction contractId(String contractId) {
    
    this.contractId = contractId;
    return this;
  }

   /**
   * Contract ID the transaction is associated with.
   * @return contractId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONTRACT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getContractId() {
    return contractId;
  }


  @JsonProperty(JSON_PROPERTY_CONTRACT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContractId(String contractId) {
    this.contractId = contractId;
  }


  public Transaction contractAddress(String contractAddress) {
    
    this.contractAddress = contractAddress;
    return this;
  }

   /**
   * Contract address where the transaction happened.
   * @return contractAddress
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONTRACT_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getContractAddress() {
    return contractAddress;
  }


  @JsonProperty(JSON_PROPERTY_CONTRACT_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContractAddress(String contractAddress) {
    this.contractAddress = contractAddress;
  }


  public Transaction blockchain(String blockchain) {
    
    this.blockchain = blockchain;
    return this;
  }

   /**
   * Main blockchain identifier: Ethereum, Polygon, etc.
   * @return blockchain
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BLOCKCHAIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBlockchain() {
    return blockchain;
  }


  @JsonProperty(JSON_PROPERTY_BLOCKCHAIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBlockchain(String blockchain) {
    this.blockchain = blockchain;
  }


  public Transaction chainName(String chainName) {
    
    this.chainName = chainName;
    return this;
  }

   /**
   * Chain name identifier: Ethereum, Goerli, Sepolia, PolygonPoS, etc.
   * @return chainName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CHAIN_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getChainName() {
    return chainName;
  }


  @JsonProperty(JSON_PROPERTY_CHAIN_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChainName(String chainName) {
    this.chainName = chainName;
  }


  public Transaction chainId(BigDecimal chainId) {
    
    this.chainId = chainId;
    return this;
  }

   /**
   * Chain ID: 1 for Ethereum, 5 for Goerli, 80001 for Polygon Mumbai, etc.
   * @return chainId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CHAIN_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getChainId() {
    return chainId;
  }


  @JsonProperty(JSON_PROPERTY_CHAIN_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChainId(BigDecimal chainId) {
    this.chainId = chainId;
  }


  public Transaction environment(String environment) {
    
    this.environment = environment;
    return this;
  }

   /**
   * Chain environment: Testnet, Mainnet, etc.
   * @return environment
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENVIRONMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEnvironment() {
    return environment;
  }


  @JsonProperty(JSON_PROPERTY_ENVIRONMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnvironment(String environment) {
    this.environment = environment;
  }


  public Transaction transactionHash(String transactionHash) {
    
    this.transactionHash = transactionHash;
    return this;
  }

   /**
   * Unique transaction hash in the blockchain.
   * @return transactionHash
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRANSACTION_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTransactionHash() {
    return transactionHash;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransactionHash(String transactionHash) {
    this.transactionHash = transactionHash;
  }


  public Transaction blockNumber(BigDecimal blockNumber) {
    
    this.blockNumber = blockNumber;
    return this;
  }

   /**
   * Unique block number in the blockchain.
   * @return blockNumber
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BLOCK_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getBlockNumber() {
    return blockNumber;
  }


  @JsonProperty(JSON_PROPERTY_BLOCK_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBlockNumber(BigDecimal blockNumber) {
    this.blockNumber = blockNumber;
  }


  public Transaction type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Transaction type: Mint, Transfer, Award, Airdrop, etc.
   * @return type
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }


  public Transaction method(String method) {
    
    this.method = method;
    return this;
  }

   /**
   * Function method name that was called in smart contract
   * @return method
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMethod() {
    return method;
  }


  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMethod(String method) {
    this.method = method;
  }


  public Transaction events(List<String> events) {
    
    this.events = events;
    return this;
  }

  public Transaction addEventsItem(String eventsItem) {
    if (this.events == null) {
      this.events = new ArrayList<>();
    }
    this.events.add(eventsItem);
    return this;
  }

   /**
   * List of events that were emitted in the transaction
   * @return events
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EVENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getEvents() {
    return events;
  }


  @JsonProperty(JSON_PROPERTY_EVENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEvents(List<String> events) {
    this.events = events;
  }


  public Transaction projectId(String projectId) {
    
    this.projectId = projectId;
    return this;
  }

   /**
   * The unique identifier of the project that the transaction is associated with. This allows developers to organize their transactions by project and helps with tracking and reporting.
   * @return projectId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProjectId() {
    return projectId;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }


  public Transaction collectionId(String collectionId) {
    
    this.collectionId = collectionId;
    return this;
  }

   /**
   * The unique identifier of the collection that the transaction is associated with. This allows developers to organize their transactions by project and helps with tracking and reporting.
   * @return collectionId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COLLECTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCollectionId() {
    return collectionId;
  }


  @JsonProperty(JSON_PROPERTY_COLLECTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCollectionId(String collectionId) {
    this.collectionId = collectionId;
  }


  public Transaction accountId(BigDecimal accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * The unique identifier of the account that the transaction belongs to.
   * @return accountId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getAccountId() {
    return accountId;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccountId(BigDecimal accountId) {
    this.accountId = accountId;
  }


  public Transaction createdOn(OffsetDateTime createdOn) {
    
    this.createdOn = createdOn;
    return this;
  }

   /**
   * The date when the collection was created.
   * @return createdOn
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_ON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_ON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
  }


  public Transaction modifiedOn(OffsetDateTime modifiedOn) {
    
    this.modifiedOn = modifiedOn;
    return this;
  }

   /**
   * The date when the collection was last modified.
   * @return modifiedOn
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MODIFIED_ON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getModifiedOn() {
    return modifiedOn;
  }


  @JsonProperty(JSON_PROPERTY_MODIFIED_ON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setModifiedOn(OffsetDateTime modifiedOn) {
    this.modifiedOn = modifiedOn;
  }


  public Transaction createdBy(BigDecimal createdBy) {
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * The Id of the user who created the collection.
   * @return createdBy
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getCreatedBy() {
    return createdBy;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedBy(BigDecimal createdBy) {
    this.createdBy = createdBy;
  }


  public Transaction modifiedBy(BigDecimal modifiedBy) {
    
    this.modifiedBy = modifiedBy;
    return this;
  }

   /**
   * The Id of the user who last modified the collection.
   * @return modifiedBy
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MODIFIED_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getModifiedBy() {
    return modifiedBy;
  }


  @JsonProperty(JSON_PROPERTY_MODIFIED_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setModifiedBy(BigDecimal modifiedBy) {
    this.modifiedBy = modifiedBy;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Transaction transaction = (Transaction) o;
    return Objects.equals(this.id, transaction.id) &&
        Objects.equals(this.status, transaction.status) &&
        Objects.equals(this.from, transaction.from) &&
        Objects.equals(this.to, transaction.to) &&
        Objects.equals(this.contractId, transaction.contractId) &&
        Objects.equals(this.contractAddress, transaction.contractAddress) &&
        Objects.equals(this.blockchain, transaction.blockchain) &&
        Objects.equals(this.chainName, transaction.chainName) &&
        Objects.equals(this.chainId, transaction.chainId) &&
        Objects.equals(this.environment, transaction.environment) &&
        Objects.equals(this.transactionHash, transaction.transactionHash) &&
        Objects.equals(this.blockNumber, transaction.blockNumber) &&
        Objects.equals(this.type, transaction.type) &&
        Objects.equals(this.method, transaction.method) &&
        Objects.equals(this.events, transaction.events) &&
        Objects.equals(this.projectId, transaction.projectId) &&
        Objects.equals(this.collectionId, transaction.collectionId) &&
        Objects.equals(this.accountId, transaction.accountId) &&
        Objects.equals(this.createdOn, transaction.createdOn) &&
        Objects.equals(this.modifiedOn, transaction.modifiedOn) &&
        Objects.equals(this.createdBy, transaction.createdBy) &&
        Objects.equals(this.modifiedBy, transaction.modifiedBy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, status, from, to, contractId, contractAddress, blockchain, chainName, chainId, environment, transactionHash, blockNumber, type, method, events, projectId, collectionId, accountId, createdOn, modifiedOn, createdBy, modifiedBy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Transaction {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    contractId: ").append(toIndentedString(contractId)).append("\n");
    sb.append("    contractAddress: ").append(toIndentedString(contractAddress)).append("\n");
    sb.append("    blockchain: ").append(toIndentedString(blockchain)).append("\n");
    sb.append("    chainName: ").append(toIndentedString(chainName)).append("\n");
    sb.append("    chainId: ").append(toIndentedString(chainId)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    transactionHash: ").append(toIndentedString(transactionHash)).append("\n");
    sb.append("    blockNumber: ").append(toIndentedString(blockNumber)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    collectionId: ").append(toIndentedString(collectionId)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    modifiedOn: ").append(toIndentedString(modifiedOn)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    modifiedBy: ").append(toIndentedString(modifiedBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

