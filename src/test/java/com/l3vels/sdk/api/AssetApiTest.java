/*
 * L3vels Api
 * L3vels API for Game developers
 *
 * The version of the OpenAPI document: 0.3
 * Contact: support@l3vels.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.l3vels.sdk.api;

import com.l3vels.sdk.models.Asset;
import com.l3vels.sdk.models.AssetsResponseDto;
import java.math.BigDecimal;
import com.l3vels.sdk.models.UpdateAssetDto;
import org.junit.Test;
import org.junit.Ignore;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AssetApi
 */
@Ignore
public class AssetApiTest {

    private final AssetApi api = new AssetApi();

    
    /**
     * Count assets
     *
     * Counts total assets in game.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void countByGameTest() {
        String authorization = null;
        String projectId = null;
        BigDecimal response = api.countByGame(authorization, projectId);

        // TODO: test validations
    }
    
    /**
     * Retrieve asset by ID
     *
     * Retrieve asset by ID in specific game/project. Example: Find asset AK-47 in game Call of Duty
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAssetByIdTest() {
        String authorization = null;
        String id = null;
        String projectId = null;
        Asset response = api.getAssetById(authorization, id, projectId);

        // TODO: test validations
    }
    
    /**
     * Retrieve assets
     *
     * This API method retrieves a list of assets that match the specified filter criteria. Developers can use this method to retrieve assets by name, description or other properties
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAssetsTest() {
        String authorization = null;
        String projectId = null;
        String collectionId = null;
        String sort = null;
        String order = null;
        String searchText = null;
        BigDecimal limit = null;
        BigDecimal page = null;
        AssetsResponseDto response = api.getAssets(authorization, projectId, collectionId, sort, order, searchText, limit, page);

        // TODO: test validations
    }
    
    /**
     * Update asset
     *
     * Update asset by ID in specific collection. Example: Update asset AK-47 in collection Weapons
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateAssetTest() {
        String authorization = null;
        String id = null;
        UpdateAssetDto updateAssetDto = null;
        Asset response = api.updateAsset(authorization, id, updateAssetDto);

        // TODO: test validations
    }
    
}
